!function s(o,l,r){function d(e,t){if(!l[e]){if(!o[e]){var a="function"==typeof require&&require;if(!t&&a)return a(e,!0);if(c)return c(e,!0);var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}var i=l[e]={exports:{}};o[e][0].call(i.exports,function(t){return d(o[e][1][t]||t)},i,i.exports,s,o,l,r)}return l[e].exports}for(var c="function"==typeof require&&require,t=0;t<r.length;t++)d(r[t]);return d}({1:[function(t,e,a){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var n,i=t("./controllers/index"),s=(n=i)&&n.__esModule?n:{default:n};var o=window.tommy.api,l={wallet:{},getWallet:function(){return o.call({endpoint:"wallet",method:"GET",data:{}}).then(function(t){return l.wallet=t})},updateWalletSettings:function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};return Object.keys(e).forEach(function(t){l.wallet[t]=e[t]}),o.call({endpoint:"wallet",method:"PUT",data:e})},getWalletCards:function(){return o.call({endpoint:"wallet/cards",method:"GET",data:{}})},getWalletTransactions:function(t){return o.call({endpoint:"wallet/transactions",method:"GET",data:{card_id:t}})},getWalletTransaction:function(t){return o.call({endpoint:"wallet/transactions/"+t,method:"GET",data:{}})},getBalanceHistory:function(){},getSettings:function(){},saveSettings:function(){},getOrderedLists:function(){if(!l.cache.lists)return[];var t=Object.values(l.cache.lists);return t.length?t.sort(function(t,e){return t.data.position-e.data.position}):[]},addTask:function(t){s.default.invalidateLists=!0,l.cache.tasks[t.id]=t,console.log("task added",t)},addTasks:function(t){if(l.tasksLoaded=!0,t&&t.length)for(var e=0;e<t.length;e++)Array.isArray(t[e])?l.addTasks(t[e]):l.addTask(t[e])},getListTasks:function(t){var n=l.cache.lists[t],i=[];for(var e in l.cache.tasks){var s=l.cache.tasks[e];n.filters&&s.filters&&function(){var t=s.filters.map(function(t){return t.name}),e=n.filters.map(function(t){return t.name}),a=!!t.filter(function(t){return-1!==e.indexOf(t)}).length||!t.length&&!e.length;console.log("task matches list tags",s.name,s.filters,n.name,n.filters,a),a&&n.data.statuses&&(a=-1!==n.data.statuses.indexOf(s.status),console.log("task matches list statuses",s.name,s.status,n.name,n.statuses,a)),a&&i.push(s)}()}return i},loadListTasks:function(t){if(!t._tasksLoaded){t._tasksLoaded=!0;var e=[window.tommy.config.getCurrentUserName()];if(t.data&&t.filters)for(var a=0;a<t.filters.length;a++)e.push(t.filters[a].name);var n={addon:"tasks",kind:"Task",tags:e,include_filters:!0,include_permission_to:!0};return t.data.statuses&&(n.status=t.data.statuses),window.tommy.api.getFragments(n)}console.log("tasks already loaded",t)},loadTasks:function(){console.log("load tasks");var t=[];for(var e in l.cache.lists){var a=l.cache.lists[e],n=l.loadListTasks(a);n&&t.push(n)}return Promise.all(t).then(l.addTasks)},addTaskActivity:function(t,e,a){var n=window.tommy.config.getCurrentUser(),i={type:e,text:a,time:new Date,user_id:n.id,user_name:n.first_name};return t.data||(t.data={}),t.data.activity||(t.data.activity=[]),t.data.activity.unshift(i),i},saveTask:function(t){if(console.log("save task",t),t.name){s.default.invalidateLists=!0,t.addon="tasks",t.kind="Task",t.include_filters=!0,t.include_permission_to=!0,t.id||l.addTaskActivity(t,"status",window.tommy.i18n.t("task.created_a_task")),t.status||(t.status=l.STATUSES[0]),t.start_at||(t.start_at=(new Date).getTime()),t.id||(t.with_permissions=["task_create_access","task_edit_access"]);var e=Object.assign({},t,{data:JSON.stringify(t.data)});return t.id?window.tommy.api.updateFragment(t.id,e).then(l.addTask):window.tommy.api.createFragment(e).then(l.addTask)}alert("Task name must be set")},addList:function(t){l.cache.lists[t.id]=t,console.log("added task list",t)},addLists:function(t){if(l.listsLoaded=!0,t&&t.length)for(var e=0;e<t.length;e++)l.addList(t[e])},loadLists:function(t){return console.log("load task lists",t),t=Object.assign({addon:"tasks",kind:"TaskList",include_filters:!0,include_permission_to:!0},t),window.tommy.api.getFragments(t).then(l.addLists)},deleteList:function(t){return s.default.invalidateLists=!0,delete l.cache.lists[t],console.log("delete list",t),window.tommy.api.deleteFragment(t)},saveList:function(t){console.log("save list",t),l.tasksLoaded=!1,t._tasksLoaded=!1,s.default.invalidateLists=!0,t.addon="tasks",t.kind="TaskList",t.include_filters=!0,t.include_permission_to=!0,t.data||(t.data={}),void 0===t.data.position&&(t.data.position=Object.keys(l.cache.lists).length),void 0===t.data.active&&(t.data.active=!0),void 0===t.data.show_fast_add&&(t.data.show_fast_add=!0),t.id||(t.with_permissions=["task_list_read_access","task_list_edit_access"]);var e=Object.assign({},t,{data:JSON.stringify(t.data),filters:JSON.stringify(t.filters)});return t.id?window.tommy.api.updateFragment(t.id,e).then(l.addList):window.tommy.api.createFragment(e).then(l.addList)},currentUserTag:function(){return{context:"members",name:window.tommy.config.getCurrentUserName(),user_id:window.tommy.config.getCurrentUserId()}},createDefaultList:function(){console.log("creating deafult task list");var t={name:window.tommy.i18n.t("index.default-task-name"),data:{default:!0},filters:[l.currentUserTag()]};return l.saveList(t)},hasDefaultList:function(){return l.cache.lists&&0<Object.values(l.cache.lists).filter(function(t){return t.data.default}).length},initPermissionSelect:function(e,t,a){console.log("init permission selects",t,a);var n={resource_id:a,include_filters:!0};window.tommy.api.getInstalledAddonPermission("tasks",t,n).then(function(t){console.log("installed addon permission",t),t.resource_id=a,window.tommy.tplManager.appendInline("tasks__tagSelectTemplate",t,e.container),l.initTagSelect(e,t)})},initTagSelect:function(t,e){var a=$$(t.container).find('.tag-select[data-permission-name="'+e.name+'"]');console.log("init tag select",e,a.dataset()),window.tommy.tagSelect.initWidget(a,e.filters,function(t){console.log("save permission tags",e,t),window.tommy.api.updateInstalledAddonPermission("tasks",e.name,{resource_id:e.resource_id,include_filters:!0,filters:JSON.stringify(t)})})},isTablet:function(){return 630<=window.innerWidth},STATUSES:["Unassigned","Assigned","Processing","Completed","Closed","Archive Task","Cancel"],translateStatus:function(t){if(t)return window.tommy.i18n.t("status."+window.tommy.util.underscore(t),{defaultValue:t})},untranslateStatus:function(t){for(var e=0;e<l.STATUSES.length;e++)if(l.translateStatus(l.STATUSES[e])===t)return l.STATUSES[e]},translatedStatuses:function(){for(var t=[],e=0;e<l.STATUSES.length;e++)t.push(l.translateStatus(l.STATUSES[e]));return t}};a.default=l},{"./controllers/index":3}],2:[function(t,e,a){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var n,i=t("../api"),s=(n=i)&&n.__esModule?n:{default:n};var o={init:function(e){var t=e.query,a=t.id,n=t.name;n&&$$(e.navbarInnerContainer).find(".center").text(n),s.default.getWalletTransactions(a).then(function(t){window.tommy.tplManager.renderInline("wallet__transactionsListTemplate",{items:t},e.container)})},uninit:function(){}};a.default=o},{"../api":1}],3:[function(t,e,a){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var n,i=t("../api"),s=(n=i)&&n.__esModule?n:{default:n};var o={init:function(t){console.log("initialize wallet addon"),o.bind(t),o.loadWalletInfo(),o.loadWallets(),o.loadTransactions(),o.loadBalanceHistory()},loadWalletInfo:function(){s.default.getWallet().then(function(t){t.show_balance&&$$(o.page.container).find(".wallet-balance-value").text(t.balance)})},loadWallets:function(){s.default.getWalletCards().then(function(t){window.tommy.tplManager.renderInline("wallet__walletsListTemplate",{items:t},o.page.container)})},loadTransactions:function(){s.default.getWalletTransactions().then(function(t){window.tommy.tplManager.renderInline("wallet__transactionsListTemplate",{items:t},o.page.container)})},loadBalanceHistory:function(){},bind:function(t){o.page=t},uninit:function(){o.page=null,delete o.page,console.log("uninitialize wallet addon")}};a.default=o},{"../api":1}],4:[function(t,e,a){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var n,i=t("../api"),l=(n=i)&&n.__esModule?n:{default:n};var s={init:function(t){var e=l.default.wallet,a=e.enable_notifications,n=e.show_balance;s.bind(t);var i={enable_notifications:a,show_balance:n};window.tommy.tplManager.renderInline("wallet__settingsTemplate",i,t.container)},onInputChange:function(t){var e,a,n,i=t.target,s=i.name,o=i.checked;l.default.updateWalletSettings((e={},a=s,n=o,a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e)).then(function(){"show_balance"===s&&(l.default.wallet.show_balance?$$(".wallet-balance-value").text(l.default.wallet.balance):$$(".wallet-balance-value").text(""))})},bind:function(t){s.page=t,$$(t.container).on("change","input",s.onInputChange)},uninit:function(){s.page&&($$(s.page.container).off("change","input",s.onInputChange),s.page=null,delete s.page)}};a.default=s},{"../api":1}],5:[function(t,e,a){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var n,i=t("../api"),s=(n=i)&&n.__esModule?n:{default:n};var o={init:function(e){var t=e.query.id;s.default.getWalletTransaction(t).then(function(t){window.tommy.tplManager.renderInline("wallet__transactionDetailsTemplate",t,e.container)})},uninit:function(){}};a.default=o},{"../api":1}],6:[function(t,e,a){"use strict";var n=l(t("./controllers/index")),i=l(t("./controllers/card-details")),s=l(t("./controllers/transaction-details")),o=l(t("./controllers/settings"));function l(t){return t&&t.__esModule?t:{default:t}}window.tommy.app.f7.onPageInit("wallet__index",n.default.init),window.tommy.app.f7.onPageBeforeRemove("wallet__index",n.default.uninit),window.tommy.app.f7.onPageBeforeInit("wallet__card_details",i.default.init),window.tommy.app.f7.onPageBeforeRemove("wallet__card_details",i.default.uninit),window.tommy.app.f7.onPageInit("wallet__transaction_details",s.default.init),window.tommy.app.f7.onPageBeforeRemove("wallet__transaction_details",s.default.uninit),window.tommy.app.f7.onPageInit("wallet__settings",o.default.init),window.tommy.app.f7.onPageBeforeRemove("wallet__settings",o.default.uninit),window.tommy.app.t7.registerHelper("wallet__formatTransactionAmount",function(t){return("paid"===t.status?"-":"+")+" "+t.amount_cents/100}),window.tommy.app.t7.registerHelper("wallet__formatTransactionStatus",function(t){return t[0].toUpperCase()+t.substr(1)}),window.tommy.app.t7.registerHelper("wallet__formatTransactionDate",function(t){var e=new Date(t),a=e.getFullYear(),n=e.getMonth()+1;n<10&&(n="0"+n);var i=e.getDate();i<10&&(i="0"+i);var s=e.getHours();s<10&&(s="0"+s);var o=e.getMinutes();return o<10&&(o="0"+o),a+"-"+n+"-"+i+" "+s+":"+o})},{"./controllers/card-details":2,"./controllers/index":3,"./controllers/settings":4,"./controllers/transaction-details":5}]},{},[6]);